name: Production
on:
  workflow_dispatch:
  pull_request:
    # branches: [main]
    types: [closed]

concurrency:
  group: deploy-production
  cancel-in-progress: true

jobs:

  echo:
    name: echo
    runs-on: ubuntu-latest
    steps:
      - name: event.action
        run: echo "github.event.action == `${{ github.event.pull_request.action }}`"
      - name: pull_request.action
        run: echo "github.event.pull_request.action == `${{ github.event.pull_request.action }}`"
      - name:  github.event.pull_request
        run: echo "github.event.pull_request = `${{ github.event.pull_request }}`"
      - name:  github.event.pull_request.merged
        run: echo "github.event.pull_request.merged = `${{ github.event.pull_request.merged }}`"
      - name:  github.event.ref
        run: echo "github.event.ref = `${{ github.event.ref }}`"
      - name:  github.ref
        run: echo "github.ref = `${{ github.ref }}`"
      - name:  github.head_ref
        run: echo "github.head_ref = `${{ github.head_ref }}`"
      - name: check 
        run: |
          echo "github.event.pull_request.merged           : $MERGED_RAW"
          echo "github.event.pull_request.merged == 'true' : $MERGED_TRUE_STR"
          echo "github.event.pull_request.merged  == true  : $MERGED_TRUE_BOOL"
        env:
          MERGED_RAW: ${{ github.event.pull_request.merged }}
          MERGED_TRUE_STR: ${{ github.event.pull_request.merged == 'true' }}
          MERGED_TRUE_BOOL: ${{ github.event.pull_request.merged == true }}

  backend-production: # requires approval
    name: Deploy Backend PRODUCTION
    # this should always run even if create-pr is skipped
    # as long as it matched -> pull_request:main:closed && merged == true
    # and end-to-end tests succeeded
    if: github.event.pull_request.merged && github.ref == 'main'
    runs-on: ubuntu-latest
    environment:
      name: backend PRODUCTION
      url: https://offguard.herokuapp.com
    steps:
      # - name: Extract branch name
      #   shell: bash
      #   run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      #   id: extract-branch
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: 'main'
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          heroku_app_name: offguard
          appdir: backend
          branch: ${{ steps.extract-branch.outputs.branch }}
        env:
          # note: "HD_" is needed to specify what to include in the deployed heroku app.
          #       However, it is only needed to differentiate from other environment variables.
          #       The "HD_" string will be stripped when the app starts. 
          #       Therefore you need to use "FRONTEND_URL" when accessing from inside the app.  
          HD_FRONTEND_URL: https://offguard.vercel.app/

  frontend-production:
    # this should always run even if create-pr is skipped
    # as long as it matched -> pull_request:main:closed && merged == true
    if: github.event.pull_request.merged && github.ref == 'main'
    name: Deploy Frontend PRODUCTION
    runs-on: ubuntu-latest
    environment:
      name: frontend PRODUCTION
      url: https://offguard.vercel.app/
    steps:
      # - name: Extract branch name
      #   shell: bash
      #   run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      #   id: extract-branch
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: 'main'
      - name: "Deploy vercel"
        id: deploy
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_ORG_ID }} 
          vercel-args: '--prod'

  